import{x as d,o as c,B as l,W as f,G as u}from"./index-CcQ31UA2.js";var i={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(s){(function(){var r={}.hasOwnProperty;function t(){for(var e="",o=0;o<arguments.length;o++){var n=arguments[o];n&&(e=a(e,p(n)))}return e}function p(e){if(typeof e=="string"||typeof e=="number")return e;if(typeof e!="object")return"";if(Array.isArray(e))return t.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var o="";for(var n in e)r.call(e,n)&&e[n]&&(o=a(o,n));return o}function a(e,o){return o?e?e+" "+o:e+o:e}s.exports?(t.default=t,s.exports=t):window.classNames=t})()})(i);var g=i.exports;const y=d(g),h=async s=>{var r;console.log(s);try{const t=await c.delete(`${l}/delete-doctor/${s}`);return console.log("Doctor deleted successfully:",t.data),t}catch(t){return u.error(`${t.message}`||"Failed to delete doctor"),console.error("Error occurred while deleting doctor:",((r=t.response)==null?void 0:r.data)||t.message),!1}},x=async s=>{console.log("appointdata calling");try{const r=await c.get(`${l}/${f}/${s}`);return console.log(`appointdata calling ${r.data}`),console.log(r.data),r.data}catch(r){throw console.error("Error fetching service data:",r.message),r.response&&(console.error("Error Response Data:",r.response.data),console.error("Error Response Status:",r.response.status)),r}};export{y as a,g as c,x as g,h};
